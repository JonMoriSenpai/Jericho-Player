{"meta":{"generator":"0.10.0","format":20,"date":1636092534726},"custom":{"general":{"name":"General","files":{"welcome":{"name":"Welcome","type":"md","content":"# Jericho-Player\r\nMusic Player Framework [ Open Source ]\r\n","path":"README.md"}}},"extractors":{"name":"Extractors","files":{"extractor":{"name":"Using Extractors","type":"md","content":"# Jericho Player Custom Extractors\r\n\r\nCustom Extractors like `playdl-music-extractor` and `video-extractor` for **Jericho Player**. Both having Auto-Proxy Feature to avoid ratelimit by-default\r\n\r\n# Loading/Using Extractors\r\n\r\nBy-Default Jericho Player use `playdl-music-extractor` and have `play-dl` as Extractor in Queue or methods for fetching track from Extractors or give `youtube-dl` for fetching Stream from `Video-Extractor` and have to be installed by npm or yarn - `npm i video-extractor@latest` and Python is needed for video extractor\r\n\r\n# Custom Default Extractors\r\n\r\n## **[playdl-music-extractor](https://www.npmjs.com/package/playdl-music-extractor)**\r\n\r\nThis extractor enables optional sources such as `Discord Attachments`, `Vimeo`, `Facebook` and `Reverbnation`.\r\n\r\n## **[video-extractor](https://www.npmjs.com/package/video-extractor)**\r\n\r\nThis extractor is based on **[YouTube DL](https://youtube-dl.org)**. This extractor enables `700+ websites` support. However, this extractor can get buggy and is not updated frequently. So, it is suggested to make your own extractor if you want to use it!\r\n\r\n```js\r\nconst { Extractor } = require('video-extractor')\r\n\r\nconst Queue = Player.CreateQueue(message, { extractor: 'youtube-dl' })\r\n```\r\n\r\n> Jericho Player auto-detects and uses `video-extractor` if it is installed!\r\n","path":"docs/extractors/extractor.md"}}},"youtube":{"name":"YouTube","files":{"cookies":{"name":"Using Cookies","type":"md","content":"# Using Cookies to avoid 429\r\n\r\n```js\r\nconst { JerichoPlayer } = require('jericho-player')\r\n\r\nconst player = new JerichoPlayer(client, {\r\n  ExtractorStreamOptions: { Cookies: String },\r\n})\r\n```\r\n\r\n> Keep in mind that using `cookies` after getting `429` **does not fix the problem**.\r\n> You should use `cookies` before getting `429` which helps to **_reduce_** `Error: Status Code 429`\r\n","path":"docs/youtube/cookies.md"},"proxy":{"name":"Using Proxy","type":"md","content":"# Using Proxy to avoid 429\r\n\r\n```js\r\nconst { JerichoPlayer } = require(\"jericho-player\");\r\n\r\n// Remove \"user:pass@\" if you don't need to authenticate to your proxy.\r\n\r\nconst proxy = \"http://user:pass@111.111.111.111:8080\";\r\n\r\nconst player = new JerichoPlayer(client, {\r\n  ExtractorStreamOptions: { Proxy: [proxy] },\r\n});\r\n```","path":"docs/youtube/proxy.md"}}}},"classes":[{"name":"JerichoPlayer","construct":{"name":"JerichoPlayer","description":"Jericho Player Constructor","params":[{"name":"Client","description":"Instanceof Discord.js Client","type":[[["Client"]]]},{"name":"JerichoPlayerOptions","description":"Player Options for Stream Extraction and Voice Connection Moderation","type":[[["DefaultJerichoPlayerOptions"]]]}]},"props":[{"name":"QueueCaches","access":"private","readonly":true,"type":[[["Object"]]],"meta":{"line":26,"file":"Player-Handler.js","path":"src/Handlers"}},{"name":"Client","description":"Client Discord Client Instance","readonly":true,"type":[[["Client"]]],"meta":{"line":64,"file":"Player-Handler.js","path":"src/Handlers"}},{"name":"JerichoPlayerOptions","description":"Jericho Player Default Options Saved for Class Utils Comparing and Fixing","readonly":true,"type":[[["DefaultJerichoPlayerOptions"]]],"meta":{"line":72,"file":"Player-Handler.js","path":"src/Handlers"}}],"methods":[{"name":"CreateQueue","description":"CreateQueue => Create Queue Instance for Player and per Guild","params":[{"name":"message","description":"Guild Message Only for getting info about guild and guildId","type":[[["Message"]],[["Interaction"]]]},{"name":"QueueCreateOptions","description":"=> Queue Create Options for Queue Instance ( for making ByDefault Values for Queue.<methods> )","type":[[["DefaultQueueCreateOptions"]],[["undefined"]]]}],"returns":{"types":[[["Queue"]]],"description":"Queue Instance => ( for Queue.<methods> like Queue.play() )"},"meta":{"line":198,"file":"Player-Handler.js","path":"src/Handlers"}},{"name":"DeleteQueue","description":"DeleteQueue -> Delete's Cached Queue (forced way to erase Queue's Existence)","params":[{"name":"guildId","description":"Guild[\"id\"] OR guild.id is required to fetch queue from the Cache","type":[[["String"]],[["Number"]]]}],"returns":{"types":[[["undefined"]]],"description":"Returns \"undefined\""},"meta":{"line":257,"file":"Player-Handler.js","path":"src/Handlers"}},{"name":"GetQueue","description":"GetQueue -> Fetch Queue (Instance) from Cache or else returns undefined","params":[{"name":"guildId","description":"Guild[\"id\"] OR guild.id is required to fetch queue from the Cache","type":[[["String"]],[["Number"]]]}],"returns":{"types":[[["Queue"]],[["undefined"]]],"description":"Returns Queue Instance or else \"undefined\""},"meta":{"line":276,"file":"Player-Handler.js","path":"src/Handlers"}}],"meta":{"line":34,"file":"Player-Handler.js","path":"src/Handlers"}},{"name":"Queue","description":"Queue -> Queue Class for Creating Queue Instances for Guild\nQueue Instance for Making a Virtual Play Ground for handling all Requests in a static Area","construct":{"name":"Queue","params":[{"name":"Client","description":"Discord Client Instance","type":[[["Client"]]]},{"name":"message","description":"Guild's Text Messsage","type":[[["Message"]]]},{"name":"QueueOptions","description":"Queue Create Options","type":[[["DefaultQueueCreateOptions"]],[["undefined"]]]},{"name":"JerichoPlayer","description":"Jericho Player Instance","type":[[["JerichoPlayer"]]]}]},"props":[{"name":"Client","description":"Client Discord Client Instance","readonly":true,"type":[[["Client"]]],"meta":{"line":74,"file":"Queue-Handler.js","path":"src/Handlers"}},{"name":"QueueOptions","description":"QueueOptions Queue Default Options for Upcoming methods operations","readonly":true,"type":[[["DefaultQueueCreateOptions"]]],"meta":{"line":82,"file":"Queue-Handler.js","path":"src/Handlers"}},{"name":"StreamPacket","description":"StreamPacket Stream packet for Queue | Simply Handling Voice Connections and Tracks/Streams","readonly":true,"type":[[["DefaultStreamPacket"]]],"meta":{"line":92,"file":"Queue-Handler.js","path":"src/Handlers"}},{"name":"message","description":"Guild Text Channel's message instance","readonly":true,"type":[[["Message"]]],"meta":{"line":106,"file":"Queue-Handler.js","path":"src/Handlers"}},{"name":"metadata","description":"Metadata value in Queue for Audio Resources","type":[[["Object"]],[["undefined"]]],"meta":{"line":112,"file":"Queue-Handler.js","path":"src/Handlers"}},{"name":"tracks","description":"Queue.tracks[] holds all the Queue's tracks Cache","readonly":true,"type":[[["Array","<"],["Object",">"]]],"meta":{"line":119,"file":"Queue-Handler.js","path":"src/Handlers"}},{"name":"guildId","description":"Guild's id Object cached from new constructor's guild value","readonly":true,"type":[[["String"]],[["Number"]]],"meta":{"line":126,"file":"Queue-Handler.js","path":"src/Handlers"}},{"name":"destroyed","description":"Queue has been destroyed with Queue.destroy() respond with Boolean or else in delay for destruction will return Timedout ID for clearInterval fucntion","readonly":true,"type":[[["Boolean"]],[["Number"]]],"meta":{"line":133,"file":"Queue-Handler.js","path":"src/Handlers"}},{"name":"MusicPlayer","description":"MusicPlayer New Music Player for the Queue Instance to carry out the Basic Stream Operations","readonly":true,"type":[[["AudioPlayer"]]],"meta":{"line":140,"file":"Queue-Handler.js","path":"src/Handlers"}},{"name":"JerichoPlayer","description":"JerichoPlayer Player's Instance for fetching Queue from Cache , Just in case it is required","readonly":true,"type":[[["JerichoPlayer"]]],"meta":{"line":151,"file":"Queue-Handler.js","path":"src/Handlers"}},{"name":"volume","description":"Volume of the Music Player Currently OR to set new Volume for Music Player","readonly":true,"type":[[["Number"]],[["undefined"]]],"meta":{"line":808,"file":"Queue-Handler.js","path":"src/Handlers"}},{"name":"paused","description":"MusicPlayer's Paused's Status as Boolean","readonly":true,"type":[[["Boolean"]],[["undefined"]]],"meta":{"line":836,"file":"Queue-Handler.js","path":"src/Handlers"}},{"name":"playing","description":"MusicPlayer's Playing/Activity's Status as Boolean","readonly":true,"type":[[["Boolean"]]],"meta":{"line":856,"file":"Queue-Handler.js","path":"src/Handlers"}},{"name":"current","description":"Returns Current Track Cached in Stream Packet or Queue.tracks","readonly":true,"type":[[["DefaultTrack"]],[["undefined"]]],"meta":{"line":872,"file":"Queue-Handler.js","path":"src/Handlers"}},{"name":"currentTimestamp","description":"CurrentTimeStamp -> TimeStamp of tracks , queue and e.t.c in milliseconds and human readable format","readonly":true,"type":[[["DefaultcurrentTimestamp"]],[["undefined"]]],"meta":{"line":883,"file":"Queue-Handler.js","path":"src/Handlers"}},{"name":"previousTrack","description":"Previous Track Data | Same as Queue.current , But Data of previous track","readonly":true,"type":[[["DefaultTrack"]],[["undefined"]]],"meta":{"line":979,"file":"Queue-Handler.js","path":"src/Handlers"}},{"name":"playerMode","description":"Player Mode of Music Player like 'Loop','Repeat','AutoPlay'","readonly":true,"type":[[["DefaultPlayerMode"]],[["undefined"]]],"meta":{"line":993,"file":"Queue-Handler.js","path":"src/Handlers"}}],"methods":[{"name":"play","description":"play() ->  Play Options for Queue Instance , Accept any kind of URL if extractor is \"youtube-dl\" or set undefined | \"play-dl\" to fetch from custom extractor","params":[{"name":"Query","description":"Query like URls or Youtube Searches | Default Extractor accept 5 supported and big websites like youtube , spotify , soundcloud , retribution , facebook and for \"youtube-dl\" , it accept any follows official \"youtube\" searches","type":[[["String"]]]},{"name":"VoiceChannel","description":"Voice Channel from Discord.js","type":[[["VoiceChannel"]],[["StageChannel"]]]},{"name":"User","description":"Guild Member or Guild User for requestedBy Object in track","type":[[["User"]],[["GuildMember"]]]},{"name":"PlayOptions","description":"Play Options | Queue Create Options | Stream Options for Additional features","type":[[["DefaultQueueCreateOptions"]]]}],"async":true,"returns":{"types":[[["Promise","<("],["Boolean","|"],["undefined",")>"]],[["undefined"]]],"description":"undefined on successfull attempt or Promise rejection | true if operation went good signal"},"meta":{"line":188,"file":"Queue-Handler.js","path":"src/Handlers"}},{"name":"skip","description":"skip() ->  Skips the Curren Song if Index is undefined | 0 , or else act as skipTo Type where Next song will play what has been Mentioned","params":[{"name":"TrackIndex","description":"Track's Index (0,1,2,..) To Skip to Specified Track or else undefined to skip current and play song now","type":[[["String"]],[["Number"]],[["undefined"]]]}],"returns":{"types":[[["Boolean"]],[["undefined"]]],"description":"true if operation went signal Green or else undefined for error event triggers"},"meta":{"line":265,"file":"Queue-Handler.js","path":"src/Handlers"}},{"name":"stop","description":"stop() -> Stops the Player and Clean the Tracks","returns":{"types":[[["Boolean"]],[["undefined"]]],"description":"true if operation emits green signal or undefined for errors"},"meta":{"line":310,"file":"Queue-Handler.js","path":"src/Handlers"}},{"name":"pause","description":"pause() -> pause the Player and freeze  Track Manulpulation and Stream tooo","returns":{"types":[[["Boolean"]],[["undefined"]]],"description":"true if operation emits green signal or undefined for errors"},"meta":{"line":332,"file":"Queue-Handler.js","path":"src/Handlers"}},{"name":"resume","description":"resume() -> Resume the Paused Player and Unfreeze Track's Functions in Queue/StreamPacket","returns":{"types":[[["Boolean"]],[["undefined"]]],"description":"true if operation emits green signal or undefined for errors"},"meta":{"line":348,"file":"Queue-Handler.js","path":"src/Handlers"}},{"name":"insert","description":"insert() -> Insertion of Query into Track's Cache in Queue","params":[{"name":"Query","description":"Query as URLs or Youtube Searches","type":[[["String"]]]},{"name":"TrackIndex","description":"Track Index Value to insert at any specific position","type":[[["String"]],[["Number"]]]},{"name":"User","description":"user Value for Track.requestedBy Object","type":[[["GuildMember"]],[["User"]]]},{"name":"InsertOptions","description":"Stream Options for Query Processing | Same as Queue Creation and Play Method","type":[[["DefaultQueueCreateOptions"]],[["undefined"]]]}],"async":true,"returns":{"types":[[["Promise","<("],["Boolean","|"],["undefined",")>"]],[["undefined"]]],"description":"true if operation emits green signal or undefined for errors"},"meta":{"line":369,"file":"Queue-Handler.js","path":"src/Handlers"}},{"name":"remove","description":"remove() -> Remove method to Remove Song/Track from Queue/Tracks Cache","params":[{"name":"Index","description":"Track Index to Remove from Queue.tracks","type":[[["String"]],[["Number"]],[["undefined"]]]},{"name":"Amount","description":"Amount of Tracks to Remove from Queue OR Queue.tracks","default":1,"type":[[["Number"]],[["undefined"]]]}],"returns":{"types":[[["Boolean"]],[["undefined"]]],"description":"true if operation emits green signal or undefined for errors"},"meta":{"line":435,"file":"Queue-Handler.js","path":"src/Handlers"}},{"name":"destroy","description":"destroy() -> Destroy Queue | Also Destroy Connection with it , method is quite powerfull","params":[{"name":"connectionTimedout","description":"NodejsTimeout Number to destroy with a timer","default":0,"type":[[["Number"]],[["undefined"]]]}],"returns":{"types":[[["Boolean"]],[["undefined"]]],"description":"true if operation emits green signal or undefined for errors"},"meta":{"line":470,"file":"Queue-Handler.js","path":"src/Handlers"}},{"name":"mute","description":"mute() -> Mute Music Player","returns":{"types":[[["Boolean"]],[["undefined"]]],"description":"true if operation emits green signal or undefined for errors"},"meta":{"line":512,"file":"Queue-Handler.js","path":"src/Handlers"}},{"name":"unmute","description":"unmute() -> Un-Mute Music Player","params":[{"name":"Volume","description":"Volume of the Track or Music Player","type":[[["String"]],[["Number"]],[["undefined"]]]}],"returns":{"types":[[["Number"]],[["undefined"]]],"description":"Returns Volume Value if operation went green or else , returns undefined if error occurs"},"meta":{"line":526,"file":"Queue-Handler.js","path":"src/Handlers"}},{"name":"clear","description":"clear() -> Clear Tracks from Queue and Stream Packet","params":[{"name":"TracksAmount","description":"Tracks Size in Queue","type":[[["Number"]],[["String"]]]}],"returns":{"types":[[["Boolean"]],[["undefined"]]],"description":"true if operation emits green signal or undefined for errors"},"meta":{"line":548,"file":"Queue-Handler.js","path":"src/Handlers"}},{"name":"back","description":"back -> Playing Previous Songs from non-destroyed Queue","params":[{"name":"TracksBackwardIndex","description":"TrackIndex in PreviousTracks Stack to Play now or else recent ended song will be played","default":0,"type":[[["String"]],[["Number"]]]},{"name":"User","description":"User Data if new User is using Back Command","type":[[["User"]],[["GuildMember"]]]},{"name":"PlayOptions","description":"Stream Play Options , Same as Queue Create Options to add more into extraction and other properties","type":[[["DefaultQueueCreateOptions"]]]},{"name":"forceback","description":"if User wants to forceibly play previous Tracks without any delay or wait","default":true,"type":[[["Boolean"]],[["undefined"]]]}],"async":true,"returns":{"types":[[["Promise","<("],["Boolean","|"],["undefined",")>"]],[["undefined"]]],"description":"true if operation emits green signal or undefined for errors"},"meta":{"line":584,"file":"Queue-Handler.js","path":"src/Handlers"}},{"name":"createProgressBar","description":"createProgressBar() -> Create progress bar for Queue ,Tracks , PreviousTracks and current track(Track)","params":[{"name":"Work","description":"Queue ,Tracks , PreviousTracks and current track(Track) as its Value","default":"track","type":[[["String"]],[["undefined"]]]},{"name":"DefaultType","description":"Default Type Value to create Progress bar Cache Types","type":[[["String"]],[["Number"]],[["undefined"]]]},{"name":"Bar","description":"Progress bar Credentials or else ByDefault it will Create one","type":[[["DefaultProgressBar"]]]}],"returns":{"types":[[["String"]],[["undefined"]]],"description":"Progress Bar or else undefined if any error occurs"},"meta":{"line":646,"file":"Queue-Handler.js","path":"src/Handlers"}},{"name":"loop","description":"loop() -> Loop Single Track or Queue","params":[{"name":"Choice","description":"Mode Choice , like \"track\" | \"queue\" | \"off\"","type":[[["String"]],[["undefined"]]]}],"returns":{"types":[[["Boolean"]],[["undefined"]]],"description":"returns true for green signal operation and undefined for errors"},"meta":{"line":725,"file":"Queue-Handler.js","path":"src/Handlers"}},{"name":"repeat","description":"repeat() -> Repeat Track or Queue with \"n\" Times given by User","params":[{"name":"Choice","description":"Mode Choice , like \"track\" | \"queue\" | \"off\"","type":[[["String"]],[["String"]],[["undefined"]]]},{"name":"Times","description":"Number of Repeat Track or Queue with \"n\" Times given by User","default":1,"type":[[["String"]],[["undefined"]]]}],"returns":{"types":[[["Boolean"]],[["undefined"]]],"description":"returns true for green signal operation and undefined for errors"},"meta":{"line":738,"file":"Queue-Handler.js","path":"src/Handlers"}},{"name":"autoplay","description":"autoplay() -> Autplay Songs with the help of last Played Track or Query given","params":[{"name":"ChoiceORQuery","description":"Mode Choice , like \"off\" | OR else give Query or Url for autoplay songs with respect to specified query","type":[[["String"]],[["String"]],[["undefined"]]]}],"returns":{"types":[[["Boolean"]],[["undefined"]]],"description":"returns true for green signal operation and undefined for errors"},"meta":{"line":754,"file":"Queue-Handler.js","path":"src/Handlers"}},{"name":"search","description":"search() -> Searching for Tracks of Query","params":[{"name":"Query","description":"Query as URLs or Youtube Searches","type":[[["String"]]]},{"name":"User","description":"user Value for Track.requestedBy Object","type":[[["GuildMember"]],[["User"]]]},{"name":"SearchOptions","description":"Stream Options for Query Processing | Same as Queue Creation and Play Method","type":[[["DefaultQueueCreateOptions"]],[["undefined"]]]}],"async":true,"returns":{"types":[[["Promise","<"],["Objectundefined",">"]],[["undefined"]]],"description":"Returns Tracks if operation emits green signal or undefined for errors"},"meta":{"line":767,"file":"Queue-Handler.js","path":"src/Handlers"}}],"meta":{"line":38,"file":"Queue-Handler.js","path":"src/Handlers"}},{"name":"StreamPacketGen","description":"StreamPacketGen -> Stream Packet Generator for Connection and Internal Workflows\nStream packet is meant to untouched by Users as it can distortion or runtime Bugs and errors during playing except when you are debugging them","construct":{"name":"StreamPacketGen","params":[{"name":"Client","description":"Discord Client Instance","type":[[["Client"]]]},{"name":"guildId","description":"Guild's ID for fetching Queue from Queue's Cache","type":[[["String"]],[["Number"]]]},{"name":"MetadataValue","description":"metadata value from user for Tracks|Queue","default":null,"type":[[["String"]],[["Number"]],[["Object"]],[["undefined"]]]},{"name":"extractor","description":"extractor to be used as \"play-dl\" or \"youtube-dl\"","default":"play-dl","type":[[["String"]],[["Boolean"]],[["undefined"]]]},{"name":"ExtractorStreamOptions","description":"Streaming options","type":[[["DefaultExtractorStreamOptions"]]]},{"name":"JerichoPlayer","description":"Audio-Player for playing Songs","type":[[["AudioPlayer"]]]},{"name":"IgnoreError","description":"IgnoreError or else throw on major bugs","default":true,"type":[[["Boolean"]],[["undefined"]]]}]},"props":[{"name":"Client","description":"Client Discord Client Instance","readonly":true,"type":[[["Client"]]],"meta":{"line":65,"file":"Stream-Packet.js","path":"src/Structures"}},{"name":"VoiceChannel","description":"VoiceChannel Voice Channel Instance from Guild's Voice Channel","readonly":true,"type":[[["VoiceChannel"]],[["StageChannel"]]],"meta":{"line":72,"file":"Stream-Packet.js","path":"src/Structures"}},{"name":"extractor","description":"Extractor Extractor name as \"play-dl\" OR \"youtube-dl\"","readonly":true,"type":[[["String"]],[["undefined"]]],"meta":{"line":79,"file":"Stream-Packet.js","path":"src/Structures"}},{"name":"searches","description":"searches User Readable Tracks","readonly":true,"type":[[["Array","<"],["Object",">"]]],"meta":{"line":86,"file":"Stream-Packet.js","path":"src/Structures"}},{"name":"tracks","description":"Tracks Stream Datas from Extractors and then parent Data of searches","readonly":true,"type":[[["Array","<"],["Object",">"]]],"meta":{"line":93,"file":"Stream-Packet.js","path":"src/Structures"}},{"name":"VoiceConnection","description":"VoiceConnection Voice Connection Value designed by \"@discordjs/voice\"","readonly":true,"type":[[["VoiceConnection"]],[["undefined"]]],"meta":{"line":100,"file":"Stream-Packet.js","path":"src/Structures"}},{"name":"metadata","description":"Metadata Metadata value in Streampacket for Audio Resources","type":[[["Object"]],[["undefined"]]],"meta":{"line":106,"file":"Stream-Packet.js","path":"src/Structures"}},{"name":"subscription","description":"subscription Player Subscription Socket to Subscribe or Subscription is ON","readonly":true,"type":[[["PlayerSubscription"]]],"meta":{"line":113,"file":"Stream-Packet.js","path":"src/Structures"}},{"name":"guildId","description":"Guild's id Object cached from new constructor's guild value","readonly":true,"type":[[["String"]],[["Number"]]],"meta":{"line":120,"file":"Stream-Packet.js","path":"src/Structures"}},{"name":"ExtractorStreamOptions","description":"ExtractorStreamOptions Extractor Fetching Options","readonly":true,"type":[[["DefaultExtractorStreamOptions"]],[["undefined"]]],"meta":{"line":127,"file":"Stream-Packet.js","path":"src/Structures"}},{"name":"IgnoreError","description":"IgnoreError IgnoreError's true Value if its required","readonly":true,"type":[[["Boolean"]],[["undefined"]]],"meta":{"line":137,"file":"Stream-Packet.js","path":"src/Structures"}},{"name":"JerichoPlayer","description":"Player's Instance for further operations","readonly":true,"type":[[["JerichoPlayer"]]],"meta":{"line":144,"file":"Stream-Packet.js","path":"src/Structures"}},{"name":"volume","description":"volume Volume of the Music Player","readonly":true,"type":[[["Number"]]],"meta":{"line":151,"file":"Stream-Packet.js","path":"src/Structures"}},{"name":"AudioResource","description":"AudioResource Track's Audio Resource","readonly":true,"type":[[["AudioResource"]],[["undefined"]]],"meta":{"line":158,"file":"Stream-Packet.js","path":"src/Structures"}},{"name":"previousTracks","description":"previousTracks Previous Tracks Cache","readonly":true,"type":[[["Array","<"],["Object",">"]]],"meta":{"line":165,"file":"Stream-Packet.js","path":"src/Structures"}},{"name":"TimedoutId","description":"TimedoutId Queue Timedout ID value or undefined","readonly":true,"type":[[["String"]],[["Number"]],[["undefined"]],[["Boolean"]]],"meta":{"line":172,"file":"Stream-Packet.js","path":"src/Structures"}},{"name":"TrackTimeStamp","description":"TrackTimeStamp Track's Live Status and Storing Value of the Time","readonly":true,"type":[[["Object"]]],"meta":{"line":179,"file":"Stream-Packet.js","path":"src/Structures"}},{"name":"MusicPlayerMode","description":"MusicPlayerMode Music Player's Modes Cache Signal","readonly":true,"type":[[["DefaultModesName"]]],"meta":{"line":186,"file":"Stream-Packet.js","path":"src/Structures"}}],"methods":[{"name":"create","description":"create() Create Stream Packet for specific time for Queue","params":[{"name":"Query","description":"Query like URls or Youtube Searches | Default Extractor accept 5 supported and big websites like youtube , spotify , soundcloud , retribution , facebook and for \"youtube-dl\" , it accept any follows official \"youtube\" searches","type":[[["String"]]]},{"name":"VoiceChannel","description":"Voice Channel to connect Discord Client and getConnections","type":[[["VoiceChannel"]],[["StageChannel"]]]},{"name":"StreamCreateOptions","description":"Stream Options for TracksGen methods","type":[[["DefaultExtractorStreamOptions"]]]},{"name":"extractor","description":"extractor to be used as \"play-dl\" or \"youtube-dl\"","default":"play-dl","type":[[["String"]],[["Boolean"]],[["undefined"]]]},{"name":"requestedBy","description":"user Data as who requested if given during insert or play method of Queue Instance","type":[[["User"]],[["GuildMember"]],[["undefined"]]]}],"async":true,"returns":{"types":[[["Promise","<("],["this","|"],["undefined",")>"]],[["undefined"]]],"description":"Returns Stream-Packet with Updated values of tracks"},"meta":{"line":203,"file":"Stream-Packet.js","path":"src/Structures"}},{"name":"remove","description":"remove() -> Remove Track from Tracks Cache","params":[{"name":"Index","description":"Tracks Remove Stream packet method but works internally","type":[[["String"]],[["Number"]],[["undefined"]]]},{"name":"Amount","description":"Tracks Amount to Delete","default":1,"type":[[["String"]],[["Number"]],[["undefined"]]]}],"returns":{"types":[[["this"]]],"description":"Returns StreamPacket Class Instance"},"meta":{"line":287,"file":"Stream-Packet.js","path":"src/Structures"}},{"name":"insert","description":"insert() -> Insertion of Track in Tracks Cache with all workings of shifting","params":[{"name":"Index","description":"Track's Index where new Track will be inserted","type":[[["Number"]],[["String"]],[["undefined"]]]},{"name":"Query","description":"Query like URls or Youtube Searches | Default Extractor accept 5 supported and big websites like youtube , spotify , soundcloud , retribution , facebook and for \"youtube-dl\" , it accept any follows official \"youtube\" searches","type":[[["String"]]]},{"name":"StreamFetchOptions","description":"Streaming Options from extractor","type":[[["DefaultExtractorStreamOptions"]]]},{"name":"extractor","description":"extractor to be used as \"play-dl\" or \"youtube-dl\"","type":[[["String"]],[["Boolean"]],[["undefined"]]]},{"name":"requestedBy","description":"User or GuildMember for requestedBy value for Track","type":[[["User"]],[["GuildMember"]],[["undefined"]]]}],"async":true,"returns":{"types":[[["Promise","<("],["this","|"],["undefined",")>"]]],"description":"Returns StreamPacket Instance of the Queue"},"meta":{"line":303,"file":"Stream-Packet.js","path":"src/Structures"}},{"name":"back","description":"back() -> back command for Internal finishing of previous Tracks streaming","params":[{"name":"TracksBackwardIndex","description":"Track Index from previous Tracks Data","default":0,"type":[[["String"]],[["Number"]],[["undefined"]]]},{"name":"requestedBy","description":"for changigng exisitng requestedBy Value","type":[[["User"]],[["GuildMember"]],[["undefined"]]]},{"name":"StreamCreateOptions","description":"Stream Create Optiosn from Track Class","type":[[["DefaultExtractorStreamOptions"]]]},{"name":"forceback","description":"Forcefully skip to requested Track as true or false","type":[[["Boolen"]],[["undefined"]]]}],"async":true,"returns":{"types":[[["Promise","<("],["Boolean","|"],["undefined",")>"]]],"description":"true if operation went green or else undefined for errors"},"meta":{"line":388,"file":"Stream-Packet.js","path":"src/Structures"}},{"name":"setMode","description":"setMode() -> Set Mode of the Music Player between \"loop\",\"repeat\",\"autoplay\"","params":[{"name":"ModeName","description":"Mode's Names for Setting Mode","type":[[["String"]]]},{"name":"ModeType","description":"Mode's Value for Setting which to operated","type":[[["String"]],[["Boolean"]],[["undefined"]]]},{"name":"Times","description":"Extra Data from Queue.methods as Times","type":[[["String"]],[["Number"]],[["undefined"]]]}],"returns":{"types":[[["Boolean"]],[["undefined"]]],"description":"returns true if operation went gree signal ro undefined on errors"},"meta":{"line":455,"file":"Stream-Packet.js","path":"src/Structures"}},{"name":"StreamAudioResourceExtractor","description":"StreamAudioResourceExtractor() -> Fetch Audio Resource to Stream in Music Player for Jericho Player","params":[{"name":"Track","description":"Track Credentials for Streaming value","type":[[["DefaultTrack"]]]}],"returns":{"types":[[["AudioResource"]]],"description":"Audio Resource from Stream of Tracks"},"meta":{"line":540,"file":"Stream-Packet.js","path":"src/Structures"}},{"name":"__handleMusicPlayerModes","description":"__handleMusicPlayerModes() -> Private Method for Handling complex Music Player's Modes with internal tracks","params":[{"name":"QueueInstance","description":"Queue Instance of per Guild","type":[[["Queue"]]]}],"async":true,"returns":{"types":[[["Boolean"]],[["undefined"]],[["Promise","<("],["Boolean","|"],["undefined",")>"]]],"description":"returns true if operation went gree signal ro undefined on errors"},"meta":{"line":570,"file":"Stream-Packet.js","path":"src/Structures"}}],"meta":{"line":34,"file":"Stream-Packet.js","path":"src/Structures"}},{"name":"TrackGenerator","description":"TrackGenerator -> these class helps to genreate Tracks from Query and Stream options using methods\nTracks sometimes went wrong if Query doesn't match or Ratelimited and error event will trigger","methods":[{"name":"fetch","description":"fetch() -> Fetch method , fetches Streams for Stream packet","scope":"static","params":[{"name":"Query","description":"Query like URls or Youtube Searches | Default Extractor accept 5 supported and big websites like youtube , spotify , soundcloud , retribution , facebook and for \"youtube-dl\" , it accept any follows official \"youtube\" searches","type":[[["String"]]]},{"name":"requestedBy","description":"user Data as who requested if given during insert or play method of Queue Instance","type":[[["User"]],[["GuildMember"]],[["undefined"]]]},{"name":"FetchOptions","description":"Extractor Options for Track Download from Extractors","type":[[["DefaultExtractorStreamOptions"]]]},{"name":"extractor","description":"extractor to be used as \"play-dl\" or \"youtube-dl\"","default":"play-dl","type":[[["String"]],[["Boolean"]],[["undefined"]]]},{"name":"CacheLength","description":"Last Track ID value","default":0,"type":[[["Nummber"]],[["String"]],[["undefined"]]]},{"name":"NoStreamif","description":"Check if User wants Stream or not","type":[[["Boolean"]],[["undefined"]]]}],"async":true,"returns":{"types":[[["Promise","<"],["DefaultChunk",">"]]],"description":"returns Chunk value | like a packet of tracks and streamdata values"},"meta":{"line":26,"file":"Tracks.js","path":"src/Structures"}}],"meta":{"line":15,"file":"Tracks.js","path":"src/Structures"}},{"name":"ClassUtils","description":"ClassUtils -> Class Util's methods are for Class's Support and helping basic or extract support neccassity tools","methods":[{"name":"stablizingoptions","description":"stablizingoptions() -> Stabilizing Local and Parent Options with accuracy 80%","scope":"static","params":[{"name":"Local","description":"Local function/method options","type":[[["Object"]]]},{"name":"Parent","description":"Parent function/method options","type":[[["Object"]]]}],"returns":{"types":[[["Object"]]],"description":"Finaliize Options"},"meta":{"line":15,"file":"Class-Utils.js","path":"src/Utilities"}},{"name":"ScanDeps","description":"ScanDeps() -> Scanning Dependencies in package.json or node_modules for package or versions list","scope":"static","params":[{"name":"packageName","description":"Package name for publishing it sversion in project","type":[[["String"]],[["undefined"]]]}],"returns":{"types":[[["String"]],[["undefined"]]],"description":"Publish Data whaich was requested for"},"meta":{"line":46,"file":"Class-Utils.js","path":"src/Utilities"}},{"name":"HumanTimeConversion","description":"HumanTimeConversion() -> Human Time Conversion Function with two categories","scope":"static","params":[{"name":"Type1","description":"Convert Milliseconds to Human Time Language","type":[[["String"]],[["Number"]],[["undefined"]]]},{"name":"Type2","description":"Convert Milliseconds to Human Time variables","type":[[["Array","<"],["Object",">"]],[["undefined"]]]}],"returns":{"types":[[["String"]],[["undefined"]]],"description":"Returns String with desired value"},"meta":{"line":151,"file":"Class-Utils.js","path":"src/Utilities"}}],"meta":{"line":7,"file":"Class-Utils.js","path":"src/Utilities"}}],"interfaces":[],"typedefs":[],"externals":[]}